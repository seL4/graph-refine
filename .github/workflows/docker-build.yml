# Copyright (c) 2022, Kry10 Limited
# SPDX-License-Identifier: BSD-2-Clause

name: Build

on:
  # FIXME: When RISC-V and ARM branches are merged to master:
  #        - switch the push trigger to master,
  #        - add schedule and pull_request triggers.
  push:
    branches:
      - ci-riscv64

# Ensure Docker image builds are fully serialised,
# so there is not a race to set the `latest` tag.
concurrency:
  group: graph-refine-docker-builds
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout graph-refine
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: seL4
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Git
        env:
          CI_SSH: ${{ secrets.CI_SSH }}
        shell: bash
        run: |
          # Configure SSH access and Git identity
          eval $(ssh-agent)
          ssh-add -q - <<< "${CI_SSH}"
          echo "SSH_AUTH_SOCK=${SSH_AUTH_SOCK}" >> "${GITHUB_ENV}"
          git config --global user.name "seL4 CI"
          git config --global user.email "ci@sel4.systems"
      # We use the Nix package manager to build Docker images.
      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      # We cache Nix builds using cachix.org.
      - name: Install Cachix
        uses: cachix/cachix-action@v12
        with:
          name: sel4-bv
          authToken: "${{ secrets.BV_CACHIX_AUTH_TOKEN }}"
      - name: Build graph-refine
        shell: bash
        run: |
          # Build graph-refine
          build_image() { nix-build -A "$1" -o "$1" nix/graph-refine.nix; }
          build_image graph-refine-image
          build_image graph-refine-runner-image
      - name: Load and tag graph-refine images
        id: image_tags
        run: |
          # Load and tag graph-refine images
          ./graph-refine-image | docker load
          ./graph-refine-runner-image | docker load
          TAG="$(docker image ls --format '{{.Tag}}' graph-refine)"
          RUN_TAG="$(docker image ls --format '{{.Tag}}' graph-refine-runner)"
          echo "runner_tag=$RUN_TAG" >> "$GITHUB_OUTPUT"
          docker tag "graph-refine:$TAG" ghcr.io/sel4/graph-refine:latest
          docker tag "graph-refine:$TAG" ghcr.io/sel4/graph-refine:"$TAG"
          docker tag "graph-refine-runner:$RUN_TAG" ghcr.io/sel4/graph-refine-runner:latest
          docker tag "graph-refine-runner:$RUN_TAG" ghcr.io/sel4/graph-refine-runner:"$RUN_TAG"
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Checkout HOL4 and polyml
        run: decompiler/setup-decompiler.py checkout --upstream --ssh
      - name: Build decompiler
        run: |
          # Build decompiler
          nix-build -A decompiler-image -o decompiler-image decompiler
          nix-build -A sel4-decompiler-image -o sel4-decompiler-image seL4-example
      - name: Load and tag decompiler image
        run: |
          # Load and tag decompiler image
          ./decompiler-image | docker load
          ./sel4-decompiler-image | docker load
          IMAGE_TAG="$(docker image ls --format '{{.Tag}}' decompiler)"
          SEL4_IMAGE_TAG="$(docker image ls --format '{{.Tag}}' sel4-decompiler)"
          docker tag "decompiler:$IMAGE_TAG" ghcr.io/sel4/decompiler:latest
          docker tag "decompiler:$IMAGE_TAG" ghcr.io/sel4/decompiler:"$IMAGE_TAG"
          docker tag "sel4-decompiler:$SEL4_IMAGE_TAG" ghcr.io/sel4/sel4-decompiler:latest
          docker tag "sel4-decompiler:$SEL4_IMAGE_TAG" ghcr.io/sel4/sel4-decompiler:"$SEL4_IMAGE_TAG"
      - name: Push upstream branches
        if: github.event_name == 'push' || github.event_name == 'schedule'
        run: |
          # Push upstream branches
          (cd decompiler/src/HOL4 && git push)
          (cd decompiler/src/polyml && git push)
      - name: Push Docker images
        if: github.event_name == 'push' || github.event_name == 'schedule'
        run: |
          # Push Docker images
          docker push --all-tags ghcr.io/sel4/graph-refine
          docker push --all-tags ghcr.io/sel4/graph-refine-runner
          docker push --all-tags ghcr.io/sel4/decompiler
          docker push --all-tags ghcr.io/sel4/sel4-decompiler
      # Ensure the graph-refine backend is using an up-to-date runner
      - name: Install graph-refine-runner
        if: github.event_name == 'push' || github.event_name == 'schedule'
        env:
          BV_BACKEND_WORK_DIR: bv
          BV_BACKEND_CONCURRENCY: 64
          BV_SSH_CONFIG: "${{ secrets.BV_SSH_CONFIG }}"
          BV_SSH_KEY: "${{ secrets.BV_SSH_KEY }}"
          BV_SSH_KNOWN_HOSTS: "${{ secrets.BV_SSH_KNOWN_HOSTS }}"
          DOCKER_RUN_COMMAND: "${{ secrets.DOCKER_RUN_COMMAND }}"
          RUNNER_TAG: "${{ steps.image_tags.outputs.runner_tag }}"
        run: ci/install-runner
